name: Deploy

on:
  push:
    branches:
      - main
      - qa
    paths-ignore:
      - 'LICENSE'
      - '*.md'
      - 'docs/**'
      
  pull_request:
    branches:
      - qa

jobs:
  test-web-server:
    name: Test Web Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: cd services/web_server && npm ci

      - name: Run tests
        run: cd services/web_server && npm run test

  test-nn-service:
    name: Test NN Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install -r services/nn_service/requirements.txt

      - name: Run tests
        run: pytest
        env:
          PYTHONPATH: .
        working-directory: services/nn_service

  determine-deploy:
    uses: ./.github/workflows/determine-environment.yml

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test-web-server, test-nn-service, determine-deploy]
    environment: ${{ needs.determine-deploy.outputs.environment }}
    steps:
      - name: Set ENVIRONMENT variable
        run: echo "ENVIRONMENT=${{ needs.determine-deploy.outputs.environment }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clean or create a deploy directory (preserve /data)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            DEPLOY_PATH="${{ vars.DEPLOY_PATH }}"

            mkdir -p "$DEPLOY_PATH"

            if [ -d "$DEPLOY_PATH" ]; then
              find "$DEPLOY_PATH" -mindepth 1 -maxdepth 1 ! -name data -exec rm -rf {} +
            fi

      - name: Copy code to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: "${{ vars.DEPLOY_PATH }}"

      - name: Inject canonical URL into index.html
        if: github.ref_name == 'main' && vars.CANONICAL_URL != ''
        env:
          CANONICAL_URL: ${{ vars.CANONICAL_URL }}
        run: |
          echo "Injecting canonical URL: $CANONICAL_URL"
          INDEX_FILE=services/web_server/public/index.html
          TAG="<link rel=\"canonical\" href=\"$CANONICAL_URL\">"
          sed -i "s|<!-- __CANONICAL_URL__ -->|$TAG|" "$INDEX_FILE"


      - name: Inject GA tag into index.html
        if: github.ref_name == 'main' && vars.GA_TAG_ID != ''
        env:
          GA_TAG_ID: ${{ vars.GA_TAG_ID }}
        run: |
          echo "Injecting GA tag: $GA_TAG_ID"
          INDEX_FILE=services/web_server/public/index.html
          GA_TAG="<script async src=\"https://www.googletagmanager.com/gtag/js?id=$GA_TAG_ID\"></script><script>window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments);}gtag('js',new Date());gtag('config','$GA_TAG_ID');</script>"
          sed -i "s|<!-- __GA_TAG_SCRIPT__ -->|$GA_TAG|" "$INDEX_FILE"

      - name: Inject robots meta tag for non-prod
        if: github.ref_name != 'main'
        run: |
          echo "Injecting robots meta tag for non-production environment"
          INDEX_FILE=services/web_server/public/index.html
          TAG='<meta name="robots" content="noindex, nofollow, noarchive, nosnippet">'
          sed -i "s|<!-- __ROBOTS_TAG__ -->|$TAG|" "$INDEX_FILE"

      - name: Build and start containers
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ vars.DEPLOY_PATH }}

            echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" > .env
            echo "WEB_PORT=${{ vars.WEB_PORT }}" >> .env
            echo "NN_PORT=${{ vars.NN_PORT }}" >> .env
            echo "WEBSOCKET_URL=${{ vars.WEBSOCKET_URL }}" >> .env

            docker-compose down --volumes --remove-orphans
            docker-compose build
            docker-compose up -d

      - name: Health check
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.DEPLOY_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            for i in {1..3}; do
              if curl -sf http://localhost:${{ vars.WEB_PORT }}/api/health >/dev/null; then
                echo "Health check passed"
                exit 0
              fi
              echo "Waiting for server..."
              sleep 3
            done
            echo "Health check failed"
            exit 1
