name: Deploy to Prod

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: prod

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Clean remote directory (preserve /data)
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ vars.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        script: |
          find /root/vivarium73 -mindepth 1 -maxdepth 1 ! -name data -exec rm -rf {} +

    - name: Copy code to server via SSH
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ vars.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        source: "."
        target: "/root/vivarium73"

    - name: Build and start containers
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ vars.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /root/vivarium73
          echo "WEBSOCKET_URL=${{ vars.WEBSOCKET_URL }}" > .env
          docker-compose down --volumes --remove-orphans
          docker-compose build
          docker-compose up -d

    - name: Wait for server health
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ vars.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        script: |
          for i in {1..3}; do
            if curl -sf http://localhost:3000/api/health >/dev/null; then
              echo "Server is healthy"
              exit 0
            fi
            echo "Waiting for server..."
            sleep 3
          done
          echo "Server did not become healthy"
          exit 1
